spring:
  application:
    name: train-ticket-system
  datasource:
    hikari:
      maximum-pool-size: 20 # good number would be 30
      minimum-idle: 5 # good number would be 10
      idle-timeout: 30000
      connection-timeout: 2000
      max-lifetime: 1800000
    url: jdbc:mysql://localhost:3306/vetautet
    username: root
    password: root1234
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
  jpa:
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
    database: mysql
    show-sql: true
    hibernate:
      ddl-auto: none
  jackson:
    serialization:
      indent-output: true
  data:
    redis:
      host: localhost
      port: 6389
      password: ""
      lettuce:
        pool:
          max-idle: 8
          max-active: 8
          min-idle: 0
          max-wait: -1ms
      connect-timeout: 30000
  threads:
    virtual:
      enabled: true
# improvement tomcat
server:
  port: 6677
  tomcat:
    threads:
      max: 10 # a good number is 200
      min-spare: 20 # number of worker thread
    max-connections: 8192 #max number of connection that the server accepts to process in given time
    accept-count: 100 #max queue length
    connection-timeout: 2000



resilience4j:
  ratelimiter:
    instances:
      backendA:
        limitForPeriod: 2
        limitRefreshPeriod: 10s
        timeoutDuration: 0
        registerHealthIndicator: true
        eventConsumerBufferSize: 100
      backendB:
        limitForPeriod: 5
        limitRefreshPeriod: 10s
        timeoutDuration: 3
  circuitbreaker:
    instances:
      checkRandom:
        registerHealthIndicator: true
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
#        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
management:
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always
    prometheus:
      access: read_only
  endpoints:
    web:
      exposure:
        include: "*"